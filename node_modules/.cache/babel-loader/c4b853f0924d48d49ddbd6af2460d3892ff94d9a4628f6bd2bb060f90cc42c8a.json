{"ast":null,"code":"var _jsxFileName = \"/home/pro/Development/React.js/Projects/music/src/component/songs.list.component.jsx\",\n  _s = $RefreshSig$();\nimport { db } from \"../lib/firebase\";\nimport { useState, useEffect } from \"react\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { Link } from \"react-router-dom\";\nimport \"./songs.list.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SongsList = () => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const fetchPost = async () => {\n    await getDocs(collection(db, \"songs\")).then(querySnapshot => {\n      const newData = querySnapshot.docs.map(doc => ({\n        ...doc.data(),\n        id: doc.id\n      }));\n      setSongs(newData);\n    });\n  };\n  useEffect(() => {\n    fetchPost();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songs-text\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"SONGS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songs\",\n      children: songs === null || songs === void 0 ? void 0 : songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-song\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `song/${song.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"song-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"single-song-title title\",\n                children: song.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"single-song-title play\",\n                children: \"play \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, song.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(SongsList, \"VOyZriN/Fhf+BilZMpMEIr3tV0w=\");\n_c = SongsList;\nvar _c;\n$RefreshReg$(_c, \"SongsList\");","map":{"version":3,"names":["db","useState","useEffect","collection","getDocs","Link","SongsList","songs","setSongs","fetchPost","then","querySnapshot","newData","docs","map","doc","data","id","song","title"],"sources":["/home/pro/Development/React.js/Projects/music/src/component/songs.list.component.jsx"],"sourcesContent":["import { db } from \"../lib/firebase\";\nimport { useState, useEffect } from \"react\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { Link } from \"react-router-dom\";\nimport \"./songs.list.css\";\n\nexport const SongsList = () => {\n  const [songs, setSongs] = useState([]);\n\n  const fetchPost = async () => {\n    await getDocs(collection(db, \"songs\")).then((querySnapshot) => {\n      const newData = querySnapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      setSongs(newData);\n    });\n  };\n\n  useEffect(() => {\n    fetchPost();\n  }, []);\n\n  return (\n    <div className=\"song-list\">\n      <div className=\"songs-text\">\n        <h1>SONGS</h1>\n      </div>\n\n      <div className=\"songs\">\n        {songs?.map((song) => (\n          <div>\n            <div key={song.id} className=\"single-song\">\n              <Link to={`song/${song.id}`}>\n                <div className=\"song-card\">\n                  <h1 className=\"single-song-title title\">{song.title}</h1>\n                  <h1 className=\"single-song-title play\">play </h1>\n                </div>\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,EAAE,QAAQ,iBAAiB;AACpC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;AACxD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,kBAAkB;AAAC;AAE1B,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,SAAS,GAAG,YAAY;IAC5B,MAAML,OAAO,CAACD,UAAU,CAACH,EAAE,EAAE,OAAO,CAAC,CAAC,CAACU,IAAI,CAAEC,aAAa,IAAK;MAC7D,MAAMC,OAAO,GAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAAEC,GAAG,KAAM;QAC/C,GAAGA,GAAG,CAACC,IAAI,EAAE;QACbC,EAAE,EAAEF,GAAG,CAACE;MACV,CAAC,CAAC,CAAC;MACHT,QAAQ,CAACI,OAAO,CAAC;IACnB,CAAC,CAAC;EACJ,CAAC;EAEDV,SAAS,CAAC,MAAM;IACdO,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAK,SAAS,EAAC,YAAY;MAAA,uBACzB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAc;MAAA;MAAA;MAAA;IAAA,QACV,eAEN;MAAK,SAAS,EAAC,OAAO;MAAA,UACnBF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEO,GAAG,CAAEI,IAAI,iBACf;QAAA,uBACE;UAAmB,SAAS,EAAC,aAAa;UAAA,uBACxC,QAAC,IAAI;YAAC,EAAE,EAAG,QAAOA,IAAI,CAACD,EAAG,EAAE;YAAA,uBAC1B;cAAK,SAAS,EAAC,WAAW;cAAA,wBACxB;gBAAI,SAAS,EAAC,yBAAyB;gBAAA,UAAEC,IAAI,CAACC;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eACzD;gBAAI,SAAS,EAAC,wBAAwB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAW;YAAA;cAAA;cAAA;cAAA;YAAA;UAC7C;YAAA;YAAA;YAAA;UAAA;QACD,GANCD,IAAI,CAACD,EAAE;UAAA;UAAA;UAAA;QAAA;MAOX;QAAA;QAAA;QAAA;MAAA,QAET;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAvCWX,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}